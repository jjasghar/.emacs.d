#+TITLE:  org-mode Configuration Settings
#+AUTHOR: JJ Asghar
#+EMAIL:  jjasghar@gmail.com

* General

#+begin_src emacs-lisp :tangle yes
(setq org-log-done 'time)
(setq org-default-notes-file (concat "~/org/todo.org"))
(define-key global-map "\C-cc" 'org-capture)
(setq org-export-coding-system 'utf-8)
(setq org-export-backends (quote (ascii html icalendar latex md)))
(setq org-startup-indented t)
#+end_src

* org-capture templates
#+begin_src emacs-lisp :tangle yes
(setq org-capture-templates
      '(("t"              ; hotkey
         "TODO list item" ; name
         entry            ; type
         ; heading type and title
         (file+headline org-default-notes-file "TODOs")
         "*** TODO %? \n %i Captured at %U \n %i %a") ; template
        ("j"
         "Journal entry"
         entry
         (file+datetree "~/org/journal.org")
         (file "~/.emacs.d/org-templates/journal.orgcaptmpl"))
        ("b"
         "Tidbit: quote, zinger, one-liner or textlet"
         entry
         (file+headline org-default-notes-file "tidbits")
         (file "~/.emacs.d/org-templates/tidbit.orgcaptmpl"))
        ("l"
         "Link to look up later"
         entry
         (file+headline org-default-notes-file "links")
         (file "~/.emacs.d/org-templates/links.orgcaptmpl"))
        ))
#+end_src

* org-todo-keywords

#+begin_src emacs-lisp :tangle yes
(setq org-todo-keywords
      '((sequence "TODO(t)" "BLOCKED(b)" "INPROGRESS(i)" "|" "DONE(d)")
        (sequence "KNOWNISSUE(k)" "|" "CANCELED(c)")
        ))
#+end_src

This is to changed the colors of the different keywords, still working on what I want.

#+begin_src emacs-lisp :tangle yes
(setq org-todo-keyword-faces
      '(("TODO" . (:foreground "DarkOrange1" :weight bold))
        ("BLOCKED" . (:foreground "sea green"))
        ("DONE" . (:foreground "light sea green"))
        ("CANCELLED" . (:foreground "forest green"))
        ("TASK" . (:foreground "blue"))))
#+end_src

* org-present

took from: https://github.com/rlister/org-present

#+BEGIN_SRC  sh :tangle no
M-x org-present
C-c C-q for quit (which will return you back to vanilla org-mode)
#+END_SRC

These are the main settings:

#+begin_src emacs-lisp :tangle yes
(eval-after-load "org-present"
  '(progn
     (add-hook 'org-present-mode-hook
               (lambda ()
                 (org-present-big)
                 (org-display-inline-images)
                 (org-present-hide-cursor)
                 (org-present-read-only)))
     (add-hook 'org-present-mode-quit-hook
               (lambda ()
                 (org-present-small)
                 (org-remove-inline-images)
                 (org-present-show-cursor)
                 (org-present-read-write)))))

;; fontify code in code blocks
(setq org-src-fontify-natively t)
#+end_src

* org-babel

#+begin_src emacs-lisp :tangle yes
(org-babel-do-load-languages
 'org-babel-load-languages
 '(
   (sh . t)
   (python . t)
   (R . t)
   (ruby . t)
   (ditaa . t)
   (dot . t)
   (octave . t)
   (sqlite . t)
   (perl . t)
   ))
#+end_src

* my main notes.org settings

#+begin_src emacs-lisp :tangle yes
;; shortcut to notes.org
(global-set-key (kbd "C-c n")
                (lambda () (interactive) (find-file "~/org/notes.org")))
(global-set-key (kbd "C-c t")
                (lambda () (interactive) (find-file "~/org/todo.org")))
#+end_src

* org-capture frame
I created a [[https://github.com/jjasghar/alfred-org-capture][alfred plugin]] to help with this too.

#+begin_src emacs-lisp :tangle yes
(defun make-orgcapture-frame ()
  "Create a new frame and run org-capture."
  (interactive)
  (make-frame '((name . "remember") (width . 80) (height . 16)
                (top . 400) (left . 300)
                (font . "-apple-Monaco-medium-normal-normal-*-13-*-*-*-m-0-iso10646-1")
                ))
  (select-frame-by-name "remember")
  (org-capture))
#+end_src
* Emacs auto-completion for non-programmers

Stolen from [[http://blog.binchen.org/posts/emacs-auto-completion-for-non-programmers.html][here]].
#+begin_src emacs-lisp :tangle yes
(require 'company)

(add-hook 'after-init-hook 'global-company-mode)

;; Don't enable company-mode in below major modes, OPTIONAL
(setq company-global-modes '(not eshell-mode comint-mode erc-mode rcirc-mode))

(defun org-mode-hook-setup ()
  ;; make `company-backends' local is critcal
  ;; or else, you will have completion in every major mode, that's very annoying!
  (make-local-variable 'company-backends)

  ;; company-ispell is the plugin to complete words
  (add-to-list 'company-backends 'company-ispell)

  ;; OPTIONAL, if `company-ispell-dictionary' is nil, `ispell-complete-word-dict' is used
  ;;  but I prefer hard code the dictionary path. That's more portable.
  (setq company-ispell-dictionary (file-truename "~/.emacs.d/misc/english-words.txt")))

(add-hook 'org-mode-hook 'org-mode-hook-setup)

#+end_src
* org-reveal
This section is for org-reveal. https://github.com/yjwen/org-reveal/

#+begin_src emacs-lisp :tangle yes
(setq org-reveal-root "file:////Users/jasghar/repo/reveal.js")
#+end_src


* org-agenda
This section is for org-agenda.

#+begin_src emacs-lisp :tangle yes
(setq org-agenda-files (list "~/org/chef.org"
                             "~/org/emacs.org"
                             "~/org/freebsd.org"
                             "~/org/model-t.org"
                             "~/org/ruby.org"
                             "~/org/todo.org"
                             "~/org/videos.org"
                             "~/org/work.org"
))
#+end_src
